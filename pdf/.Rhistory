colnames(suport_dif) <- c("Tratamento", "Dia", "Diferença consecutiva entre os comprimentos médios")
ggplot(suport_dif, aes(Dia, `Diferença consecutiva entre os comprimentos médios`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point()
ggplot(suport_dif, aes(Dia, `Diferença consecutiva entre os comprimentos médios`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(shape = Tratamento)
ggplot(suport_dif, aes(Dia, `Diferença consecutiva entre os comprimentos médios`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento))
ggplot(suport_dif, aes(Dia, `Diferença consecutiva entre os comprimentos médios`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento)) + theme_classic()
ggplot(suport_dif, aes(Dia, `Diferença consecutiva entre os comprimentos médios`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento)) + ggtitle("Gráfico da diferença consecutiva entre os comprimentos médios", subtitle = "Nanopartículas") + scale_y_continuous("Coeficiente angular para comprimento médio") + theme_classic()
lista1[1]
dif_lista1[1]
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
View(data_compact_nano)
data_compact_nano %>% filter(Tratamento == 0 & Dia== 8)
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
library(geepack)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "independence", data = data_compact_nano)
fit1
fit1$family
fit1$corstr
fit1$contrasts
fit1$residuals
fit1$modelInfo
plot(fit1$residuals)
residuals(fit1)
plot(density(fit1$residuals))
cov(fit1)
require(car)
require(MASS)
gama <- fitdistr(fit1$residuals, "gamma")
hist(fit1$residuals)
hist(fit1$residuals, freq = F)
hist(fit1$residuals, freq = F, density = T)
hist(fit1$residuals, freq = F, density = density(fit1$residuals))
hist(fit1$residuals, freq = F)
abline(density(fit1$residuals))
hist(fit1$residuals, freq = F)
abline(density(fit1$residuals))
density(data_compact_nano$Comprimento)
plot(density(data_compact_nano$Comprimento))
plot((data_compact_nano$Comprimento))
data_compact_nano %>% filter(Tratamento == 0)
(data_compact_nano %>% filter(Tratamento == 0))[,4]
plot(density((data_compact_nano %>% filter(Tratamento == 0))[,4]))
plot(density((data_compact_nano %>% filter(Tratamento == 1))[,4]))
plot(density((data_compact_nano %>% filter(Tratamento == 2))[,4]))
plot(density((data_compact_nano %>% filter(Tratamento == 3))[,4]))
plot(density((data_compact_nano %>% filter(Tratamento == 4))[,4]))
plot(density((data_compact_nano %>% filter(Tratamento == 5))[,4]))
library(lattice)
bwplot(data_compact_nano$Tratamento ~ fit1$residuals)
bwplot(getGroup(data_compact_nano) ~ fit1$residuals)
bwplot((data_compact_nano$Tratamento & data_compact_nano$Dia) ~ fit1$residuals)
bwplot((data_compact_nano$Tratamento && data_compact_nano$Dia) ~ fit1$residuals)
bwplot(c(data_compact_nano$Tratamento, data_compact_nano$Dia) ~ fit1$residuals)
bwplot(data_compact_nano$Dia ~ fit1$residuals)
bwplot(data_compact_nano$Tratamento ~ fit1$residuals, abline = 0)
plot(fit1, data_compact_nano$Tratamento~resid(.), abline = 0)
library(readxl)
library(dplyr)
library(ggplot2)
library(geepack)
library(lattice)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "independence", data = data_compact_nano)
bwplot(data_compact_nano$Tratamento ~ fit1$residuals)
hist(fit1$residuals, freq = F)
line(density(fit1$residuals))
hist(fit1$residuals, freq = F)
line(density(fit1$residuals))
hist(fit1$residuals, freq = F)
abline(density(fit1$residuals))
hist(fit1$residuals, freq = F, density = T)
hist(fit1$residuals, freq = F, density = density(fit1$residuals))
plot(density(fit1$residuals))
hist(fit1$residuals, freq = F)
fit1
install.packages("gee")
library(gee)
data("respiratory")
head(respiratory)
rm(respiratory)
data("respiratory", package = "HSAUR2")
summary(fit1)
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
par(mfrow=c(2,1))
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
par(mfrow=c(2,1))
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
par(mfrow=c(1,2))
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
par(mfrow=c(1,2))
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values & data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
boxplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
hist(fit1$residuals, freq = F)
dados <- read.table( http://www.ime.unicamp.br/~cnaber/Moscas.txt)
library(readxl)
dados <- read.table( http://www.ime.unicamp.br/~cnaber/Moscas.txt)
library(data.table)
dados <- read.table( http://www.ime.unicamp.br/~cnaber/Moscas.txt)
dados <- read.table( "http://www.ime.unicamp.br/~cnaber/Moscas.txt")
View(dados)
dados$V1 <- as.factor(dados$V1)
View(dados)
dados$V1 <- as.factor(dados$V1)
dados$V2 <- as.integer(dados$V2)
dados$V3 <- as.integer(dados$V3)
dados$V4 <- as.integer(dados$V4)
dados$V5 <- as.integer(dados$V5)
dados$V6 <- as.integer(dados$V6)
dados$V7 <- as.integer(dados$V7)
dados$V8 <- as.integer(dados$V8)
View(dados)
library(ggplot2)
install.packages("devtools")
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
ggplot2.scatterplot(dados)
ggplot2.scatterplot(dados, data=df, faceting=TRUE, facetingVarNames=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"),
facetingRect=list(background="white", lineType="solid",
lineColor="black", lineSize=1.5))
ggplot2.scatterplot(dados, data=df, faceting=TRUE, facetingVarNames=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"),
)
ggplot2.scatterplot(dados, data=df, faceting=TRUE, facetingVarNames=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"),
groupName = "V1")
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
ggplot2.scatterplot(dados, faceting=TRUE, facetingVarNames=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"),
groupName = "V1")
ggplot2.scatterplot(dados, xName='V1',yName='V2', faceting=TRUE, facetingVarNames=c("V1", "V2"),
groupName = "V1")
ggplot2.scatterplot(dados, xName='V2',yName='V3', faceting=TRUE, facetingVarNames=c("V2", "V3"),
groupName = "V1")
pairs(dados[,2:8])
ggplot(dados, aes(x=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"), y=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"))) +
geom_point()+
facet_grid(c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8") ~ c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"), scales="free")
ggplot(dados, aes(x=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"), y=c("V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8"))) +
geom_point()
ggplot(data_compact_nano, aes(Dia, Comprimento, group = Dia)) +
geom_boxplot(outlier.colour = NA) + geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75))+theme_classic() +
ggtitle("Boxplots do comprimento para cada dia", subtitle = "Nanopartículas") +
scale_y_continuous("Comprimento (mm)")
ggplot(data_compact_nano, aes(Dia, Comprimento, group = Dia)) +
geom_boxplot(outlier.colour = NA) + geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75))+theme_classic() +
ggtitle("Boxplots do comprimento para cada dia", subtitle = "Nanopartículas") +
scale_y_continuous("Comprimento (mm)")
ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
geom_boxplot(colour = "1") +
geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 1.3) + scale_fill_grey() + theme_classic() + ggtitle("Boxplots do comprimento para cada nível de tratamento nos dias", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento (mm)")
#ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
#  geom_boxplot(colour = "1") + scale_fill_grey() +
#  geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 2, shape = 1)
ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento, size = Tratamento)) +
geom_boxplot(colour = "1") +
geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 1.3) + scale_fill_grey() + theme_classic() + ggtitle("Boxplots do comprimento para cada nível de tratamento nos dias", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento (mm)")
ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
geom_boxplot(colour = "1") +
geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 1.3) + scale_fill_grey() + theme_classic() + ggtitle("Boxplots do comprimento para cada nível de tratamento nos dias", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento (mm)")
#ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
#  geom_boxplot(colour = "1") + scale_fill_grey() +
#  geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 2, shape = 1)
bwplot(data_compact_nano$Tratamento ~ fit1$residuals)
bwplot(data_compact_nano$Tratamento ~ fit1$residuals, xlim = c(-1,1))
bwplot(data_compact_nano$Tratamento ~ fit1$residuals, xlim = c(-0.9,0.3))
bwplot(data_compact_nano$Tratamento ~ fit1$residuals, xlim = c(-0.4,0.3))
bwplot(data_compact_nano$Tratamento ~ fit1$residuals)
bwplot(data_compact_nano$Dia ~ fit1$residuals)
bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
ggplot2.scatterplot(dados, xName='V2',yName='V3', faceting=TRUE, facetingVarNames=c("V2", "V3"),
groupName = "V1")
ggplot2.scatterplot(dados, xName='V2',yName='V3', faceting=TRUE,
groupName = "V1")
ggplot2.scatterplot(dados, xName=c('V2','V3'),yName=c('V2','V3'), faceting=TRUE,
groupName = "V1")
ggplot2.scatterplot(dados, xName='V2',yName='V3', faceting=TRUE,
groupName = "V1")
ggplot2.scatterplot(dados, xName='V2',yName='V3', groupName = "V1")
ggplot2.scatterplot(dados, groupName = "V1")
hist(fit1$residuals, freq = F)
plot(density(fit1$residuals))
hist(fit1$residuals, freq = F)
plot(density(fit1$residuals))
par(mfrow(c(1,2)))
par(mfrow(1,2))
par(mfrow=c(2,1))
par(mfrow=c(2,1))
hist(fit1$residuals, freq = F)
hist(fit1$residuals, freq = F)
plot(density(fit1$residuals))
hist(fit1$residuals, freq = F)
#plot(density(fit1$residuals))
plot(data_compact_nano$Comprimento)
plot(density(data_compact_nano$Comprimento))
plot(density(fit1$fitted.values))
plot(density(data_compact_nano$Comprimento))
plot(density(fit1$fitted.values))
library(GGally)
install.packages("GGally")
library(easyGgplot2)
ggpairs(dados, aes(colour = V1, alpha = 0.4))
library(GGally)
ggpairs(dados, aes(colour = V1, alpha = 0.4))
ggpairs(dados, aes(colour = V1))
ggpairs(dados)
ggpairs(dados, aes(group = V1))
ggpairs(dados, aes(group = V1, colour = V1))
ggpairs(dados, aes(group = V1, colour = V1))
ggpairs(dados, aes(group = V1))
ggpairs(dados, aes(colour = V1,group = V1))
ggpairs(dados, aes(colour = V1,group = V1, alpha = 0.4))
ggpairs(dados, aes(group = V1, alpha = 0.4))
ggpairs(dados, aes( colour = V1, alpha = 0.4))
ggpairs(dados, aes(group = V1 colour = V1))
ggpairs(dados, aes(group = V1, colour = V1))
?ggpairs
ggpairs(dados, ggplot2::aes(colour=V1))
ggpairs(dados, ggplot2::aes(colour=V1, group = V1))
ggpairs(dados, aes(colour=V1, group = V1))
ggpairs(dados, aes(group = V1))
ggpairs(dados[,2:8], aes(group = V1))
ggpairs(dados[,2:8], aes(group = dados$V1))
ggpairs(dados, aes(group = V1))
data(flea)
flea
View(flea)
ggpairs(flea, columns = 2:4)
pm <- ggpairs(flea, columns = 2:4, ggplot2::aes(colour=species))
p_(pm)
pm
ggpairs(dados, columns = 2:8, ggplot2::aes(colour=V1))
ggpairs(dados, columns = 2:8, aes(colour=V1))
teste <- ggpairs(dados, columns = 2:8, aes(colour=V1))
teste
ggpairs(dados, columns = 2:8)
ggpairs(dados, columns = 2:8, aes(group = V1, colour = V1))
teste <- ggpairs(dados, columns = 2:8, aes(group = V1))
teste
ggpairs(dados, columns = 2:8, aes(group = V1), colour = V1)
ggpairs(dados, columns = 2:8, aes(group = V1), colour = 1)
ggpairs(dados, columns = 2:8, aes(colours = V1))
ggpairs(dados, columns = 2:8, group = V1)
ggpairs(dados, columns = 2:8, ggplot2::aes(colour=V1))
ggpairs(dados, columns = 2:8, aes(colour=V1,group = V1))
ggpairs(dados, columns = 2:8, aes(group = V1))
ggpairs(dados, columns = 2:8, aes(group = V1), diag = list(na = "naDiag"))
ggpairs(dados, columns = 2:8, aes(group = V1), diag = list(blank))
ggpairs(dados, columns = 2:8, aes(group = V1))
ggpairs(flea, columns = 2:4)
pm <- ggpairs(flea, columns = 2:4, ggplot2::aes(colour=species))
ggpairs(flea, columns = 2:4, ggplot2::aes(colour=species))
library(car)
qqPlot(fit1$residuals)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "AR1", data = data_compact_nano)
?geeglm
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit1$residuals)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit1$residuals)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit1$residuals)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit1$residuals)
qqnorm(fit1$residuals)
hist(fit1$residuals, freq = F)
qqPlot(fit1$residuals)
fit3 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit1$residuals)
fit4 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit1$residuals)
fit5 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit2$residuals)
fit2 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit2$residuals)
qqPlot(fit3$residuals)
qqPlot(fit4$residuals)
fit5 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit5$residuals)
fit3 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("identity"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit3$residuals)
fit3 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit3$residuals)
fit4 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit4$residuals)
ggpairs(dados, columns = 2:8, aes(group = V1))
data(flea)
ggpairs(flea, columns = 2:4)
ggpairs(flea, columns = 2:4, ggplot2::aes(colour=species))
ggpairs(dados, columns = 2:8, ggplot2::aes(colour=V1))
?ggpairs
ggpairs(dados, ggplot2::aes(colour=V1))
ggpairs(dados, :aes(colour=V1))
ggpairs(dados, aes(colour=V1))
ggpairs(dados, aes(colour=V1, group = V1))
ggpairs(dados, aes(group = V1))
ggpairs(dados, columns = 2:8, colours(V1))
ggpairs(dados, columns = 2:8, colour = V1)
ggpairs(dados, columns = 2:8, colour = 'V1')
ggpairs(dados, columns = 2:8, mapping = 'V1')
ggpairs(dados, columns = 2:8, mapping = aes(colour = 'V1'))
ggpairs(dados, columns = 2:8, mapping = aes(colour = '1'))
ggpairs(dados, columns = 2:8, mapping = aes(group = V1))
ggpairs(dados, columns = 2:8, mapping = aes(group = V1, colour = T))
ggpairs(dados, columns = 2:8, mapping = aes(group = V1, colour = '1'))
ggpairs(dados, columns = 2:8, mapping = aes(group = V1, colour = 'V1'))
ggpairs(dados, columns = 2:8, mapping = aes(group = V1, colour = V1))
class(dados$V1)
str(dados)
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
library(geepack)
library(lattice)
library(car)
?qqPlot
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit1$residuals, distribution = "gamma")
View(qqPlot)
qqPlot(fit1$residuals, distribution = "gamma", shape = 1)
qqPlot(fit1$residuals, distribution = "gamma", shape = 3)
gama <- fitdistr(data_compact_nano$Comprimento, "gamma")
require(car)
require(MASS)
gama <- fitdistr(data_compact_nano$Comprimento, "gamma")
gama
qqp(data_compact_nano$Comprimento, "gamma", shape = gama$estimate[[1]], rate = gama$estimate[[2]])
qqPlot(fit1$residuals, distribution = "gamma", shape = 17.551234)
qqPlot(fit1$residuals, distribution = "gamma", shape = 17.551234)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit1$residuals, distribution = "gamma", shape = 17.551234)
plot(density(data_compact_nano$Comprimento))
rm(c("fit1", "gama"))
rm(c(fit1, gama))
rm(c('fit1', 'gama'))
rm(list('fit1', 'gama'))
rm(fit1)
rm(gama)
fit3 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit3$residuals)
rm(fit3)
fit4 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit4$residuals)
rm(fit4)
fit5 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit5$residuals)
fit6 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit6$residuals)
qqPlot(fit5$residuals)
var(data_compact_nano$Comprimento)
mean(data_compact_nano$Comprimento)
min(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento)))
min(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento)))
min(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento)))
min(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento)))
min(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento)))
plot( density(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento))))
plot( density(rnorm(1e6, mean(data_compact_nano$Comprimento), var(data_compact_nano$Comprimento))))
hist(fit6$residuals, freq = F)
hist(fit6$residuals, freq = F)
plot(density(fit6$residuals))
bwplot(data_compact_nano$Tratamento ~ fit6$residuals)
bwplot(data_compact_nano$Dia ~ fit6$residuals)
bwplot(data_compact_nano$Tratamento ~ fit6$fitted.values)
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
plot(density(fit6$residuals))
par(mfrow=c(2,2))
qqPlot(fit3$residuals)
fit3 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
fit4 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "ar1", data = data_compact_nano)
par(mfrow=c(2,2))
qqPlot(fit3$residuals)
qqPlot(fit4$residuals)
qqPlot(fit5$residuals)
qqPlot(fit6$residuals)#possivelmente o melhor ajuste
par(mfrow=c(2,2))
qqPlot(fit3$residuals)
qqPlot(fit4$residuals)
qqPlot(fit5$residuals)
qqPlot(fit6$residuals)#possivelmente o melhor ajuste
qqPlot(fit3$residuals, ylab = "Modelo 3", xlab = "Quantil normal")
qqPlot(fit4$residuals, ylab = "Modelo 4", xlab = "Quantil normal")
qqPlot(fit5$residuals, ylab = "Modelo 5", xlab = "Quantil normal")
qqPlot(fit6$residuals, ylab = "Modelo 6", xlab = "Quantil normal")#possivelmente o melhor ajuste
qqPlot(fit6$residuals, ylab = "Modelo 6", xlab = "Quantil normal")#possivelmente o melhor ajuste
qqPlot(fit6$residuals, ylab = "Modelo 6", xlab = "Quantil normal")#possivelmente o melhor ajuste
ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
geom_boxplot(colour = "1") +
geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 1.3) + scale_fill_grey() + theme_classic() + ggtitle("Diagramas de dispersão do comprimento para cada nível de tratamento nos dias", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento (mm)")
#ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
#  geom_boxplot(colour = "1") + scale_fill_grey() +
#  geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 2, shape = 1)
ggplot(data_compact_sal, aes(Dia, Comprimento, group = Dia)) +
geom_boxplot(outlier.colour = NA) + geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75)) + theme_classic() + ggtitle("Diagrama de dispersão do comprimento para cada dia", subtitle = "Sal de zinco") + scale_y_continuous("Comprimento (mm)")
ggplot(data_compact_sal, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
geom_boxplot(colour = "1") +
geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 1.3) +
scale_fill_grey() + theme_classic() +
ggtitle("Diagramas de dispersão do comprimento para cada nível de tratamento nos dias", subtitle = "Sal de zinco")+
scale_y_continuous("Comprimento (mm)")
#ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
#  geom_boxplot(colour = "1") + scale_fill_grey() +
#  geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 2, shape = 1)
ggplot(t1_comp, aes(Dia, Comprimento, color = Indicadora)) +
geom_boxplot(colour = "1", outlier.colour = NA) +
geom_point(aes(y=Comprimento, group=Indicadora), position = position_dodge(width=0.75), size = 1.3) +
theme_classic() +
ggtitle("Diagramas de dispersão do comprimento para conc. 0,006mg/L", subtitle = "Sal de zinco e nanopartículas")+
scale_y_continuous("Comprimento (mm)") + scale_color_discrete(name = "Nanop./sal", breaks=c("0", "1"), labels=c("Nanopartículas", "Sal de zinco"))
t1_sal <- as.data.frame(data_compact_sal %>% filter(Tratamento == 1 & (Repetição == "R2" | Repetição == "R3" | Repetição == "R4" | Repetição == "R5" | Repetição == "R6" | Repetição == "R8" | Repetição == "R9" | Repetição == "R10")) %>% select(Dia, Comprimento))
fit6
1/2.724795640
#library(xtable)
tab <- as.data.frame(cbind(rep(0:8, 6),c(lista1[[1]], lista1[[2]], lista1[[3]], lista1[[4]], lista1[[5]], lista1[[6]]), c(lista2[[1]], lista2[[2]], lista2[[3]], lista2[[4]], lista2[[5]], lista2[[6]]), c(lista3[[1]], lista3[[2]], lista3[[3]], lista3[[4]], lista3[[5]], lista3[[6]]), c(lista4[[1]], lista4[[2]], lista4[[3]], lista4[[4]], lista4[[5]], lista4[[6]]), c(lista5[[1]], lista5[[2]], lista5[[3]], lista5[[4]], lista5[[5]], lista5[[6]])))
lista1 <- list(0,0,0,0,0,0) #media
lista2 <- list(0,0,0,0,0,0) #variância
lista3 <- list(0,0,0,0,0,0) #mínimo
lista4 <- list(0,0,0,0,0,0) #máximo
lista5 <- list(0,0,0,0,0,0) #mediana
for(i in 1:6){
lista1[[i]] <- rep(0, 9)
lista2[[i]] <- rep(0,9)
lista3[[i]] <- rep(0,9)
lista4[[i]] <- rep(0,9)
lista5[[i]] <- rep(0,9)
for(j in 1:9){
lista1[[i]][j] <- round(mean( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista2[[i]][j] <- round(var( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista3[[i]][j] <- round(min( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista4[[i]][j] <- round(max( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista5[[i]][j] <- round(median( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
}
}
suporte <- as.data.frame(cbind(rep(0:8, 6), c(lista1[[1]], lista1[[2]], lista1[[3]], lista1[[4]], lista1[[5]], lista1[[6]])))
suporte$V1 <- as.factor(suporte$V1)
contr <- t(t(rep(0, 9)))
t1 <- t(t(rep(1, 9)))
t2 <- t(t(rep(2, 9)))
t3 <- t(t(rep(3, 9)))
t4 <- t(t(rep(4, 9)))
t5 <- t(t(rep(5, 9)))
t <- as.factor(rbind(contr, t1, t2, t3, t4, t5))
suporte <- cbind(t, suporte)
colnames(suporte) <- c("Tratamento", "Dia", "Comprimento médio por dia")
#c("0 = controle", "1 = 0.006mg/L", "2 = 0.0125mg/L", "3 = 0.025mg/L", "4 = 0.05mg/L", "5 = 0.1mg/L")
ggplot(suporte, aes(x = Dia, y = `Comprimento médio por dia`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento)) + ggtitle("Gráfico de perfil médio do comprimento", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento médio (mm)") +theme_classic()
coef(fit6)
2.724795640 - 0.472543388
1/(2.724795640 - 0.472543388)
plot(fit6$fitted.values, fit6$residuals)
ggplot(fit6, aes(fitted.values, residuals)) + geom_point()
plot(fit6$fitted.values, fit6$residuals)
plot(fit6$fitted.values, fit6$residuals, ylab = "Resíduos", xlab = "Valores ajustados")
plot(fit6$fitted.values, fit6$residuals, ylab = "Resíduos", xlab = "Valores ajustados", line = 0)
plot(fit6$fitted.values, fit6$residuals, ylab = "Resíduos", xlab = "Valores ajustados", abline = 0)
plot(fit6$fitted.values, fit6$residuals, ylab = "Resíduos", xlab = "Valores ajustados")
abline(y = 0)
abline(a = 0)
plot(fit6$fitted.values, fit6$residuals, ylab = "Resíduos", xlab = "Valores ajustados")
plot(fit6)
plot(fit6$residuals)
hist(fit6$residuals, freq = F, main = "Modelo 6")
hist(fit6$residuals, freq = F, main = "Modelo 6")
summary(fit6)
fit6 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
summary(fit6)
fit6$family
