bwplot(data_compact_nano$Tratamento ~ fit$residuals, xlab = "Modelo 1")
bwplot(data_compact_nano$Tratamento ~ fit_log$residuals, xlab = "Modelo 2")
bwplot(data_compact_nano$Dia ~ fit$residuals, xlab = "Modelo 1")
bwplot(data_compact_nano$Dia ~ fit_log$residuals, xlab = "Modelo 2")
bwplot(data_compact_nano$Tratamento ~ fit$fitted.values, xlab = "Modelo 1")
bwplot(data_compact_nano$Tratamento ~ fit_log$fitted.values, xlab = "Modelo 2")
bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento, xlab = "Valores observados do comprimento")
par(mfrow=c(1,2))
bwplot(data_compact_nano$Tratamento ~ fit$residuals, xlab = "Modelo 1")
bwplot(data_compact_nano$Tratamento ~ fit_log$residuals, xlab = "Modelo 2")
par(mfrow=c(1,2))
bwplot(data_compact_nano$Tratamento ~ fit$residuals, xlab = "Modelo 1")
bwplot(data_compact_nano$Tratamento ~ fit_log$residuals, xlab = "Modelo 2")
par(mfrow=c(1,2))
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(-0.5, 0.8))
plot(fit_log$fitted.values, fit_log$residuals, ylab = "Resíduos modelo 2", xlab = "Valores ajustados", ylim = c(-0.5, 0.8))
par(mfrow=c(1,2))
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(-0.5, 0.8))
plot(fit_log$fitted.values, fit_log$residuals, ylab = "Resíduos modelo 2", xlab = "Valores ajustados", ylim = c(-0.5, 0.8))
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados")
min(fit$fitted.values)
min(fit_log$fitted.values)
max(fit$fitted.values)
max(fit_log$fitted.values)
table(fit$fitted.values == fit_log$fitted.values)
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(0, 0.8))
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(-0.5, 0.8))
min(fit_log$residuals)
min(fit$residuals)
max(fit_log$residuals)
max(fit$residuals)
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(-0.5, 0.7))
plot(fit_log$fitted.values, fit_log$residuals, ylab = "Resíduos modelo 2", xlab = "Valores ajustados", ylim = c(-0.5, 0.7))
bwplot(data_compact_nano$Tratamento ~ fit$fitted.values, xlab = "Modelo 1")
bwplot(data_compact_nano$Tratamento ~ fit_log$fitted.values, xlab = "Modelo 2")
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F)#possivelmente o melhor ajuste
par(mfrow=c(1,2))
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(-0.5, 0.7), main = "Resíduos x valores ajustados")
plot(fit_log$fitted.values, fit_log$residuals, ylab = "Resíduos modelo 2", xlab = "Valores ajustados", ylim = c(-0.5, 0.7), main = "Resíduos x valores ajustados")
par(mfrow=c(1,2))
hist(fit$residuals, freq = F, main = "Histograma dos resíduos modelo 1", xlab = "Resíduos")
hist(fit_log$residuals, freq = F, main = "Histograma dos resíduos modelo 2", xlab = "Resíduos")
hist(fit$residuals, freq = F, main = "Histograma dos resíduos modelo 1", xlab = "Resíduos", size = 1)
hist(fit$residuals, freq = F, main = "Histograma dos resíduos modelo 1", xlab = "Resíduos", ylab = "Densidade")
plot(density(fit$residuals))
plot(density(fit_log$residuals))
plot(fit_log$fitted.values, fit_log$residuals, ylab = "Resíduos modelo 2", xlab = "Valores ajustados", ylim = c(-0.5, 0.7), main = "Resíduos x valores ajustados")
plot(fit_log$fitted.values, fit_log$residuals, ylab = "Resíduos modelo 2", xlab = "Valores ajustados", ylim = c(-0.5, 0.7), main = "Resíduos x valores ajustados")
plot(fit$fitted.values, fit$residuals, ylab = "Resíduos modelo 1", xlab = "Valores ajustados", ylim = c(-0.5, 0.7), main = "Resíduos x valores ajustados")
library(car)
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, cex = 0.2)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 0.2)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 0.1)#possivelmente o melhor ajuste
?qqplot
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, lwd = 0.1)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 0.1)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, cex.lab = 0.1)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F)#possivelmente o melhor ajuste
x <- rnorm(100)
hist(x, xlim=range(x),
xlab= "Variable Lable", ylab="density", main="Title of plot", prob=TRUE)
hist(x, xlim=range(x),xlab= "Variable Lable", ylab="density", main="Title of plot", prob=TRUE, cex.lab = 0.2)
qqplot(x)
qqnorm(x)
qqnorm(x, cex.lab = 0.1)
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, size = 0.1)#possivelmente o melhor ajuste
?qqPlot
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 0.1)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 10)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 50)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F,cex = 2)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 3)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, id.cex = 30)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F. labels = "lala")#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, labels = "lala")#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, labels = 0.1)#possivelmente o melhor ajuste
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F, labels = 10)#possivelmente o melhor ajuste
summary(fit)
summary(fit_log)
fit <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
library(geepack)
fit <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
summary(fit)
fit_log <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
summary(fit_log)
fit_l <- geeglm(Comprimento ~ Tratamento+Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
library(car)
qqPlot(fit_l$residuals)
fit_l <- geeglm(Comprimento ~ Tratamento+Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit_l$residuals)
plot(density(fit$residuals))
plot(density(fit_log$residuals))
fit$residuals < -0.15
sum(fit$residuals < -0.15)
fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit1$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", distribution = "gamma", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F)
fit_log
#mudando o separador decimal para resultados "printados"
options(OutDec= ",")
#definindo opções padrões dos chunks
knitr::opts_chunk$set(fig.width=6, fig.height=3.5, fig.align='center', echo=FALSE, warning=FALSE, message=FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
fig1 <- "Diagrama de dispersão do comprimento para cada dia para nanopartículas. De imediato, nota-se as seguintes características: à medida em que se passam os dias o comprimento dos microcrustáceos aumentam e a variabilidade do comprimento é diferente entre os dias. Como as medidas dos comprimentos são muito próximas, caso os pontos nos diagramas de dispersão fossem centralizadas haveria a sobreposição destes e poderia gerar algum confundimento. Note que neste caso, o interesse é simplesmente avaliar o comportamento do comprimento nos dias independente do tratamento."
fig2 <- "Diagrama de dispersão do comprimento para os níveis de tratamentos nos dias para nanopartículas. As cores na escala cinza dos indicam, do mais escuro (controle) ao mais claro (maior concentração), as diferentes concentrações de nanopartículas. Em geral, o comprimento do grupo controle é maior dentro de cada dia e no decorrer dos dias. O comprimento dos microcrustáceos nos dias de 5-8 (note a característica decrescente do comprimento para o mesmo dia entre os tratamentos), para os tratamentos de 1-5, é mais diferenciável em comparação com os dias 0-4 para os mesmos tratamentos. Assim como o gráfico anterior, a estrutura de variabilidade entre os dias é diferente e observa-se que para o mesmo dia há variação do comprimento para os diferentes tratamentos. É perceptível também que a taxa de crescimento do comprimento, para os diferentes tratamentos, é diferente."
fig3 <- "Gráfico de perfil médio do comprimento para nanopartículas. Nota-se que para o controle, referido como tratamento 0, o comprimento médio para os diferentes dias é superior quando comparado com os diferentes tratamentos. Observe que para o tratamento 2 (0.0125mg/L de nanopartículas) supera o comprimento médio dos demais tratamentos (3-5) a partir do 4 dia, abaixo somente do controle."
fig7 <- "Gráfico do número médio de ovos por dia para nanopartículas. É possivel notar, de imediato, que o tratamento 0 (controle) se destaca dos demais em relação ao número médio de ovos por dia, com igual valor ou acima de todos os outros tratamentos em 7 dos 9 dias observados, e perde apenas no dia 4, no qual a média é menor que um para esse grupo e no dia 6, no qual os tratamentos 1 (0,006mg/L), 2 (0,0125mg/L) e 3 (0,025mg/L) tiveram uma média maior. Além disso, nota-se que para os outros tratamentos nao existe um que se destaca, uma vez que nenhum deles se mantêm predominantemente acima ou abaixo dos demais. É possivel notar também que existe uma tendência de que nos dias 3, 4 e 7 o número médio de ovos seja maior para todos os tratamentos."
fig8 <- "Gráfico do número médio de neonatos para nanopartículas. Assim como acontece para o número de ovos, pode-se observar que o tratamento 0 (controle) se destaca dos demais em relação ao número médio de neonatos por dia, com igual valor ou acima de todos os outros tratamentos em 7 dos 9 dias observados, e perde apenas no dia 4, no qual a média é zero para esse grupo e no dia 6, no qual o tratamento 2 (0,0125mg/L) teve uma média maior. Além disso, nota-se que para os outros tratamentos nao existe um que se destaca, uma vez que nenhum deles se mantêm predominantemente acima ou abaixo dos demais. É possível notar também que a partir do dia 6 os grupos 0 (controle), 2 (0,0125mg/L) e 3 (0,025mg/L) seguem uma tendência crescente no número médio de neonatos, enquanto nos outros grupos esse número cresce no dia 7, mas cai novamente no dia 8.
"
ggplot(data_compact_nano, aes(Dia, Comprimento, group = Dia)) +
geom_boxplot(outlier.colour = NA) + geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75))+theme_classic() +
ggtitle("Diagrama de dispersão do comprimento para cada dia", subtitle = "Nanopartículas") +
scale_y_continuous("Comprimento (mm)")
ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
geom_boxplot(colour = "1") +
geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 1.3) + scale_fill_grey() + theme_classic() + ggtitle("Diagramas de dispersão do comprimento para cada nível de tratamento nos dias", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento (mm)")
#ggplot(data_compact_nano, aes(Dia, Comprimento, color = Tratamento, fill = Tratamento)) +
#  geom_boxplot(colour = "1") + scale_fill_grey() +
#  geom_point(aes(y=Comprimento, group=Tratamento), position = position_dodge(width=0.75), size = 2, shape = 1)
lista1 <- list(0,0,0,0,0,0) #media
lista2 <- list(0,0,0,0,0,0) #variância
lista3 <- list(0,0,0,0,0,0) #mínimo
lista4 <- list(0,0,0,0,0,0) #máximo
lista5 <- list(0,0,0,0,0,0) #mediana
for(i in 1:6){
lista1[[i]] <- rep(0, 9)
lista2[[i]] <- rep(0,9)
lista3[[i]] <- rep(0,9)
lista4[[i]] <- rep(0,9)
lista5[[i]] <- rep(0,9)
for(j in 1:9){
lista1[[i]][j] <- round(mean( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista2[[i]][j] <- round(var( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista3[[i]][j] <- round(min( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista4[[i]][j] <- round(max( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista5[[i]][j] <- round(median( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
}
}
suporte <- as.data.frame(cbind(rep(0:8, 6), c(lista1[[1]], lista1[[2]], lista1[[3]], lista1[[4]], lista1[[5]], lista1[[6]])))
suporte$V1 <- as.factor(suporte$V1)
contr <- t(t(rep(0, 9)))
t1 <- t(t(rep(1, 9)))
t2 <- t(t(rep(2, 9)))
t3 <- t(t(rep(3, 9)))
t4 <- t(t(rep(4, 9)))
t5 <- t(t(rep(5, 9)))
t <- as.factor(rbind(contr, t1, t2, t3, t4, t5))
suporte <- cbind(t, suporte)
colnames(suporte) <- c("Tratamento", "Dia", "Comprimento médio por dia")
#c("0 = controle", "1 = 0.006mg/L", "2 = 0.0125mg/L", "3 = 0.025mg/L", "4 = 0.05mg/L", "5 = 0.1mg/L")
ggplot(suporte, aes(x = Dia, y = `Comprimento médio por dia`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento)) + ggtitle("Gráfico de perfil médio do comprimento", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento médio (mm)") +theme_classic()
View(suporte)
fit$fitted.values
dim(data_compact_nano)
data_compact_nano <- cbind(data_compact_nano, suporte)
data_compact_nano <- cbind(data_compact_nano, fit$fitted.values)
as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$fit$fitted.values
as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$(fit$fitted.values)
ajuste <- fit$fitted.values
data_compact_nano <- cbind(data_compact_nano, ajuste)
mean( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$ajuste)
lista1 <- list(0,0,0,0,0,0) #media
for(i in 1:6){
lista1[[i]] <- rep(0, 9)
for(j in 1:9){
lista1[[i]][j] <- round(mean( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$ajuste), 4)
}
}
suporte <- as.data.frame(cbind(rep(0:8, 6), c(lista1[[1]], lista1[[2]], lista1[[3]], lista1[[4]], lista1[[5]], lista1[[6]])))
suporte$V1 <- as.factor(suporte$V1)
contr <- t(t(rep(0, 9)))
t1 <- t(t(rep(1, 9)))
t2 <- t(t(rep(2, 9)))
t3 <- t(t(rep(3, 9)))
t4 <- t(t(rep(4, 9)))
t5 <- t(t(rep(5, 9)))
t <- as.factor(rbind(contr, t1, t2, t3, t4, t5))
suporte <- cbind(t, suporte)
colnames(suporte) <- c("Tratamento", "Dia", "Comprimento médio por dia")
#c("0 = controle", "1 = 0.006mg/L", "2 = 0.0125mg/L", "3 = 0.025mg/L", "4 = 0.05mg/L", "5 = 0.1mg/L")
ggplot(suporte, aes(x = Dia, y = `Comprimento médio por dia`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento)) + ggtitle("Gráfico de perfil médio do comprimento", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento médio (mm)") +theme_classic()
lista1
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
lista1 <- list(0,0,0,0,0,0) #media
lista2 <- list(0,0,0,0,0,0) #variância
lista3 <- list(0,0,0,0,0,0) #mínimo
lista4 <- list(0,0,0,0,0,0) #máximo
lista5 <- list(0,0,0,0,0,0) #mediana
for(i in 1:6){
lista1[[i]] <- rep(0, 9)
lista2[[i]] <- rep(0,9)
lista3[[i]] <- rep(0,9)
lista4[[i]] <- rep(0,9)
lista5[[i]] <- rep(0,9)
for(j in 1:9){
lista1[[i]][j] <- round(mean( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista2[[i]][j] <- round(var( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista3[[i]][j] <- round(min( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista4[[i]][j] <- round(max( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
lista5[[i]][j] <- round(median( as.data.frame(data_compact_nano %>% filter(Tratamento == paste0(i-1) & Dia==paste0(j-1)))$Comprimento ), 4)
}
}
suporte <- as.data.frame(cbind(rep(0:8, 6), c(lista1[[1]], lista1[[2]], lista1[[3]], lista1[[4]], lista1[[5]], lista1[[6]])))
suporte$V1 <- as.factor(suporte$V1)
contr <- t(t(rep(0, 9)))
t1 <- t(t(rep(1, 9)))
t2 <- t(t(rep(2, 9)))
t3 <- t(t(rep(3, 9)))
t4 <- t(t(rep(4, 9)))
t5 <- t(t(rep(5, 9)))
t <- as.factor(rbind(contr, t1, t2, t3, t4, t5))
suporte <- cbind(t, suporte)
colnames(suporte) <- c("Tratamento", "Dia", "Comprimento médio por dia")
#c("0 = controle", "1 = 0.006mg/L", "2 = 0.0125mg/L", "3 = 0.025mg/L", "4 = 0.05mg/L", "5 = 0.1mg/L")
ggplot(suporte, aes(x = Dia, y = `Comprimento médio por dia`, group = Tratamento)) + geom_line(aes(linetype = Tratamento)) + geom_point(aes(shape = Tratamento)) + ggtitle("Gráfico de perfil médio do comprimento", subtitle = "Nanopartículas") + scale_y_continuous("Comprimento médio (mm)") +theme_classic()
fit <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
ajuste <- fit$fitted.values
data_compact_nano <- cbind(data_compact_nano, ajuste)
data_compact_nano %>% mutate(dif = Comprimento - ajuste)
data_compact_nano <- data_compact_nano %>% mutate(dif = Comprimento - ajuste)
fit_log <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
ajuste_log <- fit_log$fitted.values
data_compact_nano <- cbind(data_compact_nano, ajuste_log)
data_compact_nano <- data_compact_nano %>% mutate(dif_log = Comprimento - ajuste_log)
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
ajuste <- fit$fitted.values
ajuste_log <- fit_log$fitted.values
View(ajuste)
View(ajuste_log)
fit
fit_log
table(fit$fitted.values == fit_log$fitted.values)
data_compact_nano <- cbind(data_compact_nano, ajuste)
data_compact_nano <- data_compact_nano %>% mutate(dif = Comprimento - ajuste)
data_compact_nano <- cbind(data_compact_nano, ajuste_log)
data_compact_nano <- data_compact_nano %>% mutate(dif_log = Comprimento - ajuste_log)
fit$residuals
head(fit$residuals)
dim(data_compact_nano)
dim(data_compact_nano$dif)
length(data_compact_nano$dif)
rbind(data_compact_nano$dif, data_compact_nano$dif_log)
data_compact_nano$dif
f <- rbind(data_compact_nano$dif, data_compact_nano$dif_log)
View(f)
rm(f)
data_compact_nano$dif
t(data_compact_nano$dif)
t(t(data_compact_nano$dif))
data_compact_nano$dif
rbind(t(t(data_compact_nano$dif)), t(t(data_compact_nano$dif_log)))
f <- rbind(t(t(data_compact_nano$dif)), t(t(data_compact_nano$dif_log)))
f <- rbind(rep(0, 524), rep(1, 524),t(t(data_compact_nano$dif)), t(t(data_compact_nano$dif_log)))
length(data_compact_nano$dif)
f <- rbind(t(t(rep(0, 524))), t(t(rep(1, 524))),t(t(data_compact_nano$dif)), t(t(data_compact_nano$dif_log)))
View(f)
f <- rbind(t(t(data_compact_nano$dif)), t(t(data_compact_nano$dif_log)))
f <- cbind(t(t(rep(0, 524))), t(t(rep(1, 524))), f)
t <- rbind(t(t(rep(0, 524))), t(t(rep(1, 524))))
t
f <- cbind(t, f)
f <- as.data.frame(f)
f$V1 <- as.factor(f$V1)
ggplot(f, aes(V1, V2)) + geom_boxplot(outlier.colour = NA)
all.equal(unique(fit), unique(fit_log))
unique(fit)
all.equal(unique(fit$fitted.values), unique(fit_log$fitted.values))
table(fit$fitted.values == fit_log)
prop.table(fit$fitted.values == fit_log)
fit$fitted.values == fit_log
table(fit$fitted.values == fit_log$fitted.values)
which(data_compact_nano$dif != data_compact_nano$dif_log)
data_compact_nano$dif[which(data_compact_nano$dif != data_compact_nano$dif_log)]
data_compact_nano$dif_log[which(data_compact_nano$dif != data_compact_nano$dif_log)]
f <- rbind(t(t(data_compact_nano$dif[which(data_compact_nano$dif != data_compact_nano$dif_log)])), t(t(data_compact_nano$dif_log[which(data_compact_nano$dif != data_compact_nano$dif_log)])))
length(data_compact_nano$dif[which(data_compact_nano$dif != data_compact_nano$dif_log)])
t <- rbind(t(t(rep(0, 284))), t(t(rep(1, 284))))
f <- cbind(t, f)
f$V1 <- as.factor(f$V1)
f <- as.data.frame(f)
f$V1 <- as.factor(f$V1)
ggplot(f, aes(V1, V2)) + geom_boxplot()
summary(data_compact_nano$dif[which(data_compact_nano$dif != data_compact_nano$dif_log)])
summary(data_compact_nano$dif_log[which(data_compact_nano$dif != data_compact_nano$dif_log)])
unique(data_compact_nano$dif)
summary(unique(data_compact_nano$dif))
summary(unique(data_compact_nano$dif_log))
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
fit <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
fit_log <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
bwplot(data_compact_nano$Tratamento ~ fit$fitted.values, xlab = "Modelo 1")
library(lattice)
bwplot(data_compact_nano$Tratamento ~ fit$fitted.values, xlab = "Modelo 1")
bwplot(data_compact_nano$Tratamento ~ fit_log$fitted.values, xlab = "Modelo 2")
summary(fit)
summary(fit_log)
fit <- geeglm(Comprimento ~ Tratamento + Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 2",grid = F)
fit <- geeglm(Comprimento ~ Tratamento + Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 2",grid = F)
fit <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
fit_sal <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_sal)
View(data_compact_sal)
fit_sal <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repetição, corstr = "ar1", data = data_compact_sal)
qqPlot(fit_sal$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo",grid = F)
fit_sal <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repetição, corstr = "ar1", data = data_compact_sal)
qqPlot(fit_sal$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo",grid = F)
summary(fit_sal)
fit_sal <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = ""), id = Repetição, corstr = "ar1", data = data_compact_sal)
fit_sal <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "identity"), id = Repetição, corstr = "ar1", data = data_compact_sal)
qqPlot(fit_sal$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo",grid = F)
fit_sal <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repetição, corstr = "ar1", data = data_compact_sal)
qqPlot(fit_sal$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo",grid = F)
plot(density(fit_sal$residuals))
qqPlot(fit_sal$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo",grid = F)
library(readxl)
library(dplyr)
library(ggplot2)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
#Omissão dos dados faltantes; estes dados faltantes são aqueles considerados como "Morta"
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
data_compact_nano <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/nanoparticulas_dadosR.xlsx"))
data_compact_nano$Tratamento <- as.factor(data_compact_nano$Tratamento)
data_compact_nano$Comprimento <- as.numeric(data_compact_nano$Comprimento)
data_compact_nano$Dia <- as.factor(data_compact_nano$Dia)
data_compact_nano$Repeticao <- as.factor(data_compact_nano$Repeticao)
data_compact_sal <- as.data.frame(read_excel("/home/hugo/Documentos/ME810/HELENA/projectHelena/dados/saldezinco_dadosR.xlsx"))
data_compact_sal$Tratamento <- as.factor(data_compact_sal$Tratamento)
data_compact_sal$Comprimento <- as.numeric(data_compact_sal$Comprimento)
data_compact_sal$Dia <- as.factor(data_compact_sal$Dia)
data_compact_sal$Repetição <- as.factor(data_compact_sal$Repetição)
data_compact_nano <- na.omit(data_compact_nano)
data_compact_sal <- na.omit(data_compact_sal)
pandoc --help
library(geepack)
library(lattice)
library(car)
#fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
#fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("identity"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
#fit1 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
#fit2 <- geeglm(Comprimento ~ Tratamento*Dia, family = Gamma("inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
#fit3 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
#fit4 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(), id = Repeticao, corstr = "ar1", data = data_compact_nano)
#fit5 <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian("inverse"), id = Repeticao, corstr = "unstructured", data = data_compact_nano)
fit <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
#bwplot(data_compact_nano$Tratamento ~ fit1$residuals)
#bwplot(data_compact_nano$Dia ~ fit1$residuals)
#hist(fit1$residuals, freq = F)
#plot(density(fit1$residuals))
#bwplot(data_compact_nano$Tratamento ~ fit1$fitted.values)
#bwplot(data_compact_nano$Tratamento ~ data_compact_nano$Comprimento)
#summary(fit1)
#par(mfrow=c(2,2))
#qqPlot(fit3$residuals, ylab = "Modelo 3", xlab = "Quantil normal")
#qqPlot(fit4$residuals, ylab = "Modelo 4", xlab = "Quantil normal")
#qqPlot(fit5$residuals, ylab = "Modelo 5", xlab = "Quantil normal")
qqPlot(fit$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 1", grid = F)#possivelmente o melhor ajuste
#fit_new <- geeglm(Comprimento ~ Tratamento + Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
#fit_new <- geeglm(Comprimento ~ Tratamento + Dia, family = gaussian(link = "inverse"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
fit_log <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
qqPlot(fit_log$residuals,ylab = "Quantil dos resíduos", xlab = "Quantil normal", main = "Gráfico de quantil residual e quantil teórico normal modelo 2",grid = F)
summary(fit_log)
xtable::summary(fit_log)
xtable::xtable(summary(fit_log))
library(xtable)
xtable(summary(fit_log))
summary(fit_log)
coef(summary(fit_log))
xtable(coef(summary(fit_log)))
summary(fit_log)
teste <-  geeglm(Comprimento ~ Tratamento + Dia + Tratamento5:Dia + Tratamento3:Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
teste <-  geeglm(Comprimento ~ Tratamento + Dia + (Tratamento == 5):Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
summary(fit_log)
summary(fit_log)
fit_log <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
library(geepack)
library(car)
fit_log <- geeglm(Comprimento ~ Tratamento*Dia, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
summary(fit_log)
teste <- geeglm(Comprimento ~ Tratamento + Dia + Tratamento5:Dia3, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
teste <- geeglm(Comprimento ~ Tratamento + Dia + `Tratamento5:Dia3`, family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
teste <- geeglm(Comprimento ~ Tratamento + Dia + (Tratamento == 5):(Dia==3), family = gaussian(link = "log"), id = Repeticao, corstr = "ar1", data = data_compact_nano)
summary(fit_log)
exp(-1.00239)
exp(-1.00239 + 0.19046)
exp(-1.00239 + 0.34847)
exp(-1.00239 + 0.50810)
exp(-1.00239 + 0.54194)
exp(-1.00239 + 0.65708)
exp(-1.00239 + 0.69723)
exp(-1.00239 + 0.73058)
exp(-1.00239 + 0.73005)
exp(-1.00239 - 0.07055)
exp(-1.00239 - 0.07055 + 0.19046 + 0.01021)
exp(-1.00239 - 0.07055 + 0.34847 + 0.01520)
exp(-1.00239 - 0.07055 + 0.50810 -0.01855 )
exp(-1.00239 - 0.07055 + 0.54194 + 0.01012)
exp(-1.00239 - 0.07055 + 0.65708-0.00421)
exp(-1.00239 - 0.07055 + 0.69723-0.00554)
exp(-1.00239 - 0.07055 + 0.73058+0.00128)
exp(-1.00239 - 0.07055 + 0.73005+0.02544)
exp(-1.00239 - 0.05029)
exp(-1.00239 - 0.05029+0.19046+0.01592)
exp(-1.00239 - 0.05029+0.19046+0.01592)
exp(-1.00239 - 0.05029+0.34847-0.00303)
exp(-1.00239 - 0.05029+0.50810-0.06422)
exp(-1.00239 - 0.05029+0.54194+0.01480)
exp(-1.00239 - 0.05029+0.65708+0.00552)
exp(-1.00239 - 0.05029+0.69723-0.00983)
exp(-1.00239 - 0.05029+0.73058+0.01086)
exp(-1.00239 - 0.05029+0.73005+0.02269)
exp(-1.00239 - 0.07055)
exp(-1.00239 - 0.07055)
exp(-1.00239 - 0.07055 + 0.19046 +0.01021)
exp(-1.00239 - 0.07055 + 0.34847 + 0.03133)
exp(-1.00239 - 0.07055 + 0.50810 -0.01676 )
exp(-1.00239 - 0.07055 +0.54194-0.01278)
exp(-1.00239 - 0.07055 +0.65708-0.05593)
exp(-1.00239 - 0.07055 +0.69723-0.07543)
exp(-1.00239 - 0.07055 +0.73058-0.03887)
exp(-1.00239 - 0.07055 +0.73005+0.01298)
exp(-1.00239 -0.07348)
exp(-1.00239 -0.07348+0.19046-0.00132 )
exp(-1.00239 -0.07348+0.34847-0.00656)
exp(-1.00239 -0.07348+ 0.50810 -0.02462)
exp(-1.00239 -0.07348+ 0.54194-0.01946)
exp(-1.00239 -0.07348+ 0.65708+0.00176)
exp(-1.00239 -0.07348+ 0.69723-0.02482)
exp(-1.00239 -0.07348+ 0.73058-0.01425)
exp(-1.00239 -0.07348+ 0.73005+0.00474)
exp(-1.00239 -0.04458)
exp(-1.00239 -0.04458 + 0.19046-0.01338)
exp(-1.00239 -0.04458 + 0.34847+0.00735)
exp(-1.00239 -0.04458 + 0.50810 -0.07177)
exp(-1.00239 -0.04458 + 0.54194-0.05709)
exp(-1.00239 -0.04458 + 0.65708-0.08493)
exp(-1.00239 -0.04458 + 0.69723-0.07797)
exp(-1.00239 -0.04458 + 0.73058-0.08694)
exp(-1.00239 -0.04458 + 0.73005 -0.06236)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
